{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css\\\">\\n  <script src=\\\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.0/jquery.min.js\\\"></script>\\n  <script src=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js\\\"></script>\\n<div class=\\\"container\\\">\\n  <h2>Upload Document</h2>\\n  <form enctype=\\\"multipart/form-data\\\">\\n    <!-- <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\">Name:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\"  >\\n    </div> -->\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"file\\\">File:</label>\\n      <input type=\\\"file\\\" class=\\\"form-control\\\" name=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\"  >\\n    </div>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"uploader.uploadAll()\\\" \\n  [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">Upload</button>\\n  </form>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <h2>Fill the Document</h2>\\n  <form (ngSubmit)=\\\"SubForm()\\\" class=\\\"editor\\\" onsubmit=\\\"return false;\\\" style=\\\"margin: 50px 0;\\\">\\n    <div [innerHTML]=\\\"final\\\"></div>\\n    <button class=\\\"btn btn-primary update\\\" type=\\\"submit\\\">Update</button>\\n  </form>\\n</div>\\n\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { HttpClient } from  '@angular/common/http';\nimport { DomSanitizer, SafeResourceUrl, SafeUrl } from '@angular/platform-browser';\nimport {  FileUploader, FileSelectDirective } from 'ng2-file-upload/ng2-file-upload';\nimport * as $ from 'jquery';\n\n// const URL = 'http://localhost:3000/api/upload';\n// const URL = 'http://3.17.180.228:8000/api/v1/';\nconst URL = 'http://127.0.0.1:8000/api/v1/';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\ttitle = 'file-upload';\n\tfinal:any;\n\twebdata:any;\n\terror:any;\n\n\tconstructor(private httpClient: HttpClient, private sanitizer: DomSanitizer){\n\t\tthis.oldfile().subscribe(\n\t\t  (res) => {\n\t\t\tthis.webdata = res;\n\t\t\tthis.final = sanitizer.bypassSecurityTrustHtml(this.webdata.html);\n\t\t\t// console.log(res);\n\t\t  },\n\t\t  (err) => this.error = err\n\t\t);\n\t}\n\n\tpublic oldfile() {\n\t\tlet url = URL+`file/1/`;\n\t\treturn this.httpClient.get(url);\n\t}\n\n\tpublic uploader: FileUploader = new FileUploader({url: URL+'file/', itemAlias: 'file'});\n\n\tngOnInit() {\n\t\tthis.uploader.onAfterAddingFile = (file) => { file.withCredentials = false; };\n\t\tthis.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n\t\t\t console.log('ImageUpload:uploaded:', item, status, response);\n\t\t\t alert('File uploaded successfully');\n\t\t};\n\t\t$(document).ready(function(){\n\t\t\t// alert(\"Hello\");\n\t\t\t$(\".update\").click(function(){\n\t\t\t\tlet arr = {}\n\t\t\t\tconsole.log($(\".editor input\").length);\n\t\t\t\tconsole.log($(\".editor\").serializeArray());\n\t\t\t})\n\t\t});\n\t}\n\n\tSubForm(){\n\t\tconsole.log(\"Hello\");\n\t}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FileSelectDirective } from 'ng2-file-upload';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FileSelectDirective\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}