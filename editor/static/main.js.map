{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container\\\">\\n  <h2>Upload Document</h2>\\n  <form  (ngSubmit)=\\\"onSubmit(fileForm)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\">Name:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\"   [(ngModel)]=\\\"fileForm.name\\\" required >\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"file\\\">File:</label>\\n      <input type=\\\"file\\\" class=\\\"form-control\\\" name=\\\"mydoc\\\" [(ngModel)]=\\\"fileForm.file\\\" required >\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Upload</button>\\n  </form>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <h2>Fill the Document</h2>\\n  <form (ngSubmit)=\\\"SubForm()\\\" method=\\\"post\\\" style=\\\"margin: 50px 0;\\\">\\n    <div [innerHTML]=\\\"final\\\"></div>\\n    <button class=\\\"btn btn-primary\\\">Update</button>\\n  </form>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpErrorResponse, HttpEventType } from  '@angular/common/http';\nimport { map } from  'rxjs/operators';\nimport { Observable, Subject } from 'rxjs';\nimport { FormBuilder, FormGroup } from  '@angular/forms';\nimport { DomSanitizer, SafeResourceUrl, SafeUrl} from '@angular/platform-browser';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\ttitle = 'online-editor-angular';\n\tSERVER_URL: string = \"http://localhost:3000\";\n\tapiUrl = \"http://127.0.0.1:8000/api/v1/\";\n\n\tform: FormGroup;\n\terror: string;\n\tuserId: number = 1;\n\tuploadResponse = { status: '', message: '', filePath: '' };\n\tfileForm = { file: '', name: '' };\n\t// webdata = {'content':'', 'data':'', 'detail':'', 'html':'', 'id':0, 'length':0, 'name':''};\n\twebdata:any;\n\tfinal:any;\n\n\tconstructor(private httpClient: HttpClient, private formBuilder: FormBuilder, private sanitizer: DomSanitizer){\n\t\tthis.oldfile().subscribe(\n\t\t  (res) => {\n\t\t\tthis.webdata = res;\n\t\t\tthis.final = sanitizer.bypassSecurityTrustHtml(this.webdata.html);\n\t\t\t// console.log(res);\n\t\t  },\n\t\t  (err) => this.error = err\n\t\t);\n\t}\n\n\tpublic oldfile() {\n\t\tlet url = this.apiUrl+`file/1/`;\n\t\treturn this.httpClient.get(url);\n\t}\n\n\tpublic upload(data) {\n\t\tlet uploadURL = this.apiUrl+`file/`;\n\t\tconsole.log(data)\n\t\treturn this.httpClient.post<any>(uploadURL, data, {\n\t\t  reportProgress: true,\n\t\t  observe: 'events'\n\t\t}).pipe(map((event) => {\n\n\t\t  switch (event.type) {\n\n\t\t\tcase HttpEventType.UploadProgress:\n\t\t\t  const progress = Math.round(100 * event.loaded / event.total);\n\t\t\t  return { status: 'progress', message: progress };\n\n\t\t\tcase HttpEventType.Response:\n\t\t\t  return event.body;\n\t\t\tdefault:\n\t\t\t  return `Unhandled event: ${event.type}`;\n\t\t  }\n\t\t})\n\t\t);\n\t}\n\n  onSubmit(data) {\n\tconsole.log(data)\n\t// const formData = new FormData();\n\t// formData.append('file', this.form.get('mydoc').value);\n\t// formData.append('name', this.form.get('name').value);\n\t// console.log(formData);\n\t// console.log(this.userId);\n\n\tthis.upload(data).subscribe(\n\t  (res) => this.uploadResponse = res,\n\t  (err) => this.error = err\n\t);\n  }\n\n  \tSubForm(){\n  \t\tconsole.log(\"Hello\");\n  \t}\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}